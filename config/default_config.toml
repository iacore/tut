# Configuration file for tut

[general]
# What editor to use. TUT_USE_INTERNAL will use the editor that comes with tut.
# If you want you can set this to $EDITOR to use your environment variable or
# vim if you want to specify the program directly.
editor="TUT_USE_INTERNAL"

# You need to press yes in a confirmation dialog before favoriting, boosting,
# etc.
confirmation=true

# Enable mouse support in tut.
mouse-support=false

# The date format to be used. See https://pkg.go.dev/time#pkg-constants
date-format="2006-01-02 15:04"

# Format for dates the same day. See date-format for more info.
date-tody-format="15:04"

# This displays relative dates instead for statuses that are one day or older
# the output is 1y2m1d (1 year 2 months and 1 day)
# 
# The value is an integer
# -1     = don't use relative dates
#  0     = always use relative dates, except for dates < 1 day
#  1 - âˆž = number of days to use relative dates
# 				
# Value: 28 will display a relative date for toots that are between 1-28 days
# old. Otherwise it will use the short or long format.
date-relative=-1

# The max with of text before it wraps when displaying a toot.
max-width=0

# The placement of your panes.
# valid: left, right, top, bottom
list-placement="left"

# How should panes be split?
# valid: row, column
list-split="row"

# The proportion of panes vs. content. 1 on this and 3 on content below results
# in content taking up 3 times more space.
list-proportion=1

# See previous.
content-proportion=2

# Hide notifications of this type in your notification timelines.
# valid: mention, status, boost, follow, follow_request, favorite, poll, edit
notifications-to-hide=[]

# Always include a quote of the message you're replying to.
quote-reply=false

# If you want to show icons in timelines.
show-icons=true

# If you only want to you the letter of keys instead of the full hint.
short-hints=false

# If you want to display the filter that filtered a toot.
show-filter-phrase=true

# Display a message in the commandbar on how to access the help text.
show-help=true

# Always jump to the newest post. May ruin your reading experience.
stick-to-top=false

# Display the username of the person being boosted instead of the person that
# boosted.
show-boosted-user=false

# Open a new pane when you run a command like :timeline home.
commands-in-new-pane=true

# Set a default name for the timeline if the name is empty. So if you run :tag
# linux the title of the pane will be set to #linux
dynamic-timeline-name=true

# 0 = No terminal title
# 1 = Show title in terminal and top bar
# 2 = Only show terminal title, and no top bar in tut
# 3 = No terminal title and no top bar in tut.
# valid: 0, 1, 2, 3
terminal-title=0

# If you don't want the whole UI to update, and only update the text content you
# can disable this. This will lead to some artifacts being left on the screen
# when emojis are present.
redraw-ui=true

# The leader is used as a shortcut to run commands as you can do in Vim. By
# default this is disabled and you enable it by setting a key here. It can only
# consist of one char, so set it to something like a comma.
leader-key=""

# Number of milliseconds before the leader command resets. So if you tap the
# leader-key by mistake or are to slow it empties all the input after X
# milliseconds.
leader-timeout=1000

# [[general.timelines]]
# Timelines adds panes of feeds. You can customize the number of feeds, what
# they should show and the key to activate them.

# --- START OF EXAMPLE ---
# [[general.timelines]]
# name="home"
# type="home"
# hide-boosts=false
# hide-replies=false
# 
# [[general.timelines]]
# name="Notifications"
# type="notifications"
# keys=["n", "N"]
# closed=true
# on-creation-closed="new-pane"
# on-focus="focus-self"
# --- END OF EXAMPLE ---

# The name to display above the timeline
# name=""

# The type of the timeline
# valid: home, direct, local, federated, bookmarks, saved, favorited, notifications,
# lists, mentions, tag
# type=""

# Used for the tag type, so here you set the tag. If you have multiple you
# separate them with a space.
# data=""

# A list of keys to give this timeline focus. See under the input section to
# learn more about keys.
# keys=[]

# A list of special-keys to give this timeline focus. See under the input
# section to learn more about special-keys.
# special-keys=[]

# A shortcut to give this timeline focus with your leader-key + this shortcut.
# shortcut=""

# Hide boosts in this timeline.
# hide-boosts="false"

# Hide replies in this timeline.
# hide-replies="false"

# Don't open this timeline when you start tut. Use your keys or shortcut to open
# it.
# closed="false"

# Don't open this timeline when you start tut. Use your keys or shortcut to open
# it.
# valid: new-pane, current-pane
# on-creation-closed="new-pane"

# Don't open this timeline when you start tut. Use your keys or shortcut to open
# it.
# valid: focus-pane, focus-self
# on-focus="focus-pane"

# [[general.leader-actions]]
# You set actions leader-key with one or more leader-actions.
# 
# The shortcuts are up to you, but keep them quite short and make sure they
# don't collide. If you have one shortcut that is "f" and an other one that is
# "fav", the one with "f" will always run and "fav" will never run. 
# 
# Some special actions that requires data to be set:
# pane is special as it's a shortcut for switching between the panes you've set
# under general and they are zero indexed. pane 0 = your first timeline, pane 1
# = your second and so on.
# list-placement as it takes the argument top, right, bottom or left
# list-split as it takes the argument column or row
# proportions takes the arguments [int] [int], where the first integer is the
# list and the other content, e.g. proportions 1 3. See list-proportion above
# for more information.

# --- START OF EXAMPLE ---
# [[general.leader-actions]]
# type="close-pane"
# shortcut="q"
# 
# [[general.leader-actions]]
# type="list-split"
# data="row"
# shortcut="r"
# 
# [[general.leader-actions]]
# type="list-split"
# data="column"
# shortcut="c"
# --- END OF EXAMPLE ---

# The action you want to run.
# valid: blocking, boosts, clear-notifications, close-pane, compose, edit, favorited,
# favorites, followers, following, history, list-placement, list-split, lists,
# move-pane-left, move-pane-right, move-pane-up, move-pane-down, move-pane-home,
# move-pane-end, muting, newer, pane, preferences, profile, proportions,
# refetch, stick-to-top, tags
# type=""

# Data to pass to the action.
# data=""

# A shortcut to run this action with your leader-key + this shortcut.
# shortcut=""

[media]
# Media files will be removed directly after they've been opened. Some programs
# doesn't like this, so if your media doesn't open, try set this to false. Tut
# will remove all files once you close the program.
delete-temp-files=true

[media.image]
# The program to open images. TUT_OS_DEFAULT equals xdg-open on Linux, open on
# MacOS and start on Windows.
program="TUT_OS_DEFAULT"

# Arguments to pass to the program.
args=""

# If the program runs in the terminal set this to true.
terminal=false

# If the program should be called multiple times when there is multiple files.
# If set to false all files will be passed as an argument, but not all programs
# support this.
single=true

# If the files should be passed in reverse order. This will make some programs
# display the files in the correct order.
reverse=false

[media.video]
# The program to open videos. TUT_OS_DEFAULT equals xdg-open on Linux, open on
# MacOS and start on Windows.
program="TUT_OS_DEFAULT"

# Arguments to pass to the program.
args=""

# If the program runs in the terminal set this to true.
terminal=false

# If the program should be called multiple times when there is multiple files.
# If set to false all files will be passed as an argument, but not all programs
# support this.
single=true

# If the files should be passed in reverse order. This will make some programs
# display the files in the correct order.
reverse=false

[media.audio]
# The program to open audio. TUT_OS_DEFAULT equals xdg-open on Linux, open on
# MacOS and start on Windows.
program="TUT_OS_DEFAULT"

# Arguments to pass to the program.
args=""

# If the program runs in the terminal set this to true.
terminal=false

# If the program should be called multiple times when there is multiple files.
# If set to false all files will be passed as an argument, but not all programs
# support this.
single=true

# If the files should be passed in reverse order. This will make some programs
# display the files in the correct order.
reverse=false

[media.link]
# The program to open links. TUT_OS_DEFAULT equals xdg-open on Linux, open on
# MacOS and start on Windows.
program="TUT_OS_DEFAULT"

# Arguments to pass to the program.
args=""

# If the program runs in the terminal set this to true.
terminal=false

[desktop-notification]
# Enable notifications when someone follows you.
followers=false

# Enable notifications when one of your toots gets favorited.
favorite=false

# Enable notifications  when someone mentions you.
mention=false

# Enable notifications when a post you have interacted with gets edited.
update=false

# Enable notifications when one of your toots gets boosted.
boost=false

# Enable notifications when a poll ends.
poll=false

# Enable notifications for new posts.
posts=false

[open-custom]
# --- START OF EXAMPLE ---
# [[open-custom.programs]]
# program = 'chromium'
# terminal = false
# hint = "[C]hrome"
# keys = ["c", "C"]
# 		
# [[open-custom.programs]]
# program = 'imv'
# terminal = false
# hint = "[I]mv"
# keys = ["i", "I"]"
# --- END OF EXAMPLE ---

# [[open-custom.programs]]
# The program to open the file with.
# program=""

# Arguments to pass to the program.
# args=""

# If the program runs in the terminal set this to true.
# terminal=false

# What should the key hint in tut be for this program. See under the input
# section to learn more about hint.
# hint=""

# A list of keys to to open files with this program. See under the input section
# to learn more about keys.
# keys=[]

# A list of special-keys to open files with this program. See under the input
# section to learn more about special-keys.
# special-keys=[]

[open-pattern]
# [[open-pattern.programs]]
# Here you can set your own glob patterns for opening matching URLs in the
# program you want them to open up in. You could for example open Youtube videos
# in your video player instead of your default browser. To see the syntax for
# glob pattern you can follow this URL https://github.com/gobwas/glob#syntax.
# matching=""

# The program to open the file with.
# program=""

# Arguments to pass to the program.
# args=""

# If the program runs in the terminal set this to true.
# terminal=false

[style]
# All styles can be represented in their HEX value like #ffffff or with their
# name, so in this case white. The only special value is "default" which equals
# to transparent, so it will be the same color as your terminal.
# You can also use xrdb colors like this xrdb:color1 The program will use colors
# prefixed with an * first then look for URxvt or XTerm if it can't find any
# color prefixed with an asterisk. If you don't want tut to guess the prefix you
# can set the prefix yourself. If the xrdb color can't be found a preset color
# will be used. You'll have to set theme="none" for this to work.

# The theme to use. You can use some themes that comes bundled with tut. Check
# out the themes available on the URL below. If a theme is named nord.toml you
# just write theme="nord".
# 
# https://github.com/RasmusLindroth/tut/tree/master/config/themes
# 
# You can also create a theme file in your config directory e.g.
# ~/.config/tut/themes/foo.toml and then set theme=foo.
# 
# If you want to use your own theme but don't want to create a new file, set
# theme="none" and then you can create your own theme below.
# 
theme="default"

# The xrdb prefix used for colors in .Xresources.
xrdb-prefix="guess"

# The background color used on most elements.
background=""

# The text color used on most of the text.
text=""

# The color to display subtle elements or subtle text. Like lines and help text.
subtle=""

# The color for errors or warnings
warning-text=""

# This color is used to display username.
text-special-one=""

# This color is used to display username and key hints.
text-special-two=""

# The color of the bar at the top
top-bar-background=""

# The color of the text in the bar at the top.
top-bar-text=""

# The color of the bar at the bottom
status-bar-background=""

# The color of the text in the bar at the bottom.
status-bar-text=""

# The color of the bar at the bottom in view mode.
status-bar-view-background=""

# The color of the text in the bar at the bottom in view mode.
status-bar-view-text=""

# The color of the text in the command bar at the bottom.
command-text=""

# Background of selected list items.
list-selected-background=""

# The text color of selected list items.
list-selected-text=""

# The background color of selected list items that are out of focus.
list-selected-inactive-background=""

# The text color of selected list items that are out of focus.
list-selected-inactive-text=""

# The main color of the text for key hints
controls-text=""

# The highlight color of for key hints
controls-highlight=""

# The background color in drop-downs and autocompletions
autocomplete-background=""

# The text color in drop-downs at autocompletions
autocomplete-text=""

# The background color for selected value in drop-downs and autocompletions
autocomplete-selected-background=""

# The text color for selected value in drop-downs and autocompletions
autocomplete-selected-text=""

# The background color on selected button and the text color of unselected
# buttons
button-color-one=""

# The text color on selected button and the background color of unselected
# buttons
button-color-two=""

# The background on named timelines.
timeline-name-background=""

# The text color on named timelines
timeline-name-text=""

[input]
# In this section you set the keys to be used in tut.
# 		
# The hint option lets you set which part of the hint that will be highlighted
# in tut. E.g. [F]avorite results in a highlighted F and the rest of the text is
# displayed normally.
# Some of the options can be in two states, like favorites, so there you can set
# the hint-alt option to something like Un[F]avorite.
# 
# Examples:
# "[D]elete" = Delete with a highlighted D
# "Un[F]ollow" = UnFollow with a highlighted F
# "[Enter]" = Enter where everything is highlighted
# "Yan[K]" = YanK with a highlighted K
# 
# The keys option lets you define what key that should be pressed. This is
# limited to on character only and they are case sensitive.
# Example:
# keys=["j","J"]
# 
# You can also set special-keys and they're for keys like Escape and Enter. To
# find the names of special keys you have to go to the following site and look
# for "var KeyNames = map[Key]string{"
# 
# https://github.com/gdamore/tcell/blob/master/key.go

global-down = { desc = "Keys for moving down", keys = ["j","J"], special-keys = ["Down"] }
global-up = { desc = "Keys for moving down", keys = ["k","K"], special-keys = ["Up"] }
global-enter = { desc = "To select items", special-keys = ["Enter"] }
global-back = { desc = "To go back", hint = "[Esc]", special-keys = ["Esc"] }
global-exit = { desc = "To go back or exit", hint = "[Q]uit", keys = ["q","Q"] }
main-home = { desc = "Move to the top", keys = ["g"], special-keys = ["Home"] }
main-end = { desc = "Move to the bottom", keys = ["G"], special-keys = ["End"] }
main-prev-feed = { desc = "Go to previous feed", keys = ["h","H"], special-keys = ["Left"] }
main-next-feed = { desc = "Go to next feed", keys = ["l","L"], special-keys = ["Right"] }
main-prev-pane = { desc = "Focus on the previous feed pane", special-keys = ["Backtab"] }
main-next-pane = { desc = "Focus on the next feed pane", special-keys = ["Tab"] }
main-next-account = { desc = "Focus on the next account", special-keys = ["Ctrl-N"] }
main-prev-account = { desc = "Focus on the previous account", special-keys = ["Ctrl-P"] }
main-compose = { desc = "Compose a new toot", keys = ["c","C"] }
status-avatar = { desc = "Open avatar", hint = "[A]vatar", keys = ["a","A"] }
status-boost = { desc = "Boost a toot", hint = "[B]oost", keys = ["b","B"] }
status-edit = { desc = "Edit a toot", hint = "[E]dit", keys = ["e","E"] }
status-delete = { desc = "Delete a toot", hint = "[D]elete", keys = ["d","D"] }
status-favorite = { desc = "Favorite a toot", hint = "[F]avorite", keys = ["f","F"] }
status-media = { desc = "Open toots media files", hint = "[M]edia", keys = ["m","M"] }
status-links = { desc = "Open links", hint = "[O]pen", keys = ["o","O"] }
status-poll = { desc = "Open poll", hint = "[P]oll", keys = ["p","P"] }
status-reply = { desc = "Reply to toot", hint = "[R]eply", keys = ["r","R"] }
status-bookmark = { desc = "Save/bookmark a toot", hint = "[S]ave", hint-alt = "Un[S]ave", keys = ["s","S"] }
status-thread = { desc = "View thread", hint = "[T]hread", keys = ["t","T"] }
status-user = { desc = "Open user profile", hint = "[U]ser", keys = ["u","U"] }
status-view-focus = { desc = "Open the view mode", hint = "[V]iew", keys = ["v","V"] }
status-yank = { desc = "Yank the url of the toot", hint = "[Y]ank", keys = ["y","Y"] }
status-toggle-cw = { desc = "Show the content in a content warning", hint = "Press [Z] to toggle cw", keys = ["z","Z"] }
status-show-filtered = { desc = "Show the content of a filtered toot", hint = "Press [Z] to view filtered toot", keys = ["z","Z"] }
user-avatar = { desc = "View avatar", hint = "[A]vatar", keys = ["a","A"] }
user-block = { desc = "Block the user", hint = "[B]lock", hint-alt = "Un[B]lock", keys = ["b","B"] }
user-follow = { desc = "Follow user", hint = "[F]ollow", hint-alt = "Un[F]ollow", keys = ["f","F"] }
user-follow-request-decide = { desc = "Follow user", hint = "Follow [R]equest", hint-alt = "Follow [R]equest", keys = ["r","R"] }
user-mute = { desc = "Mute user", hint = "[M]ute", hint-alt = "Un[M]ute", keys = ["m","M"] }
user-links = { desc = "Open links", hint = "[O]pen", keys = ["o","O"] }
user-user = { desc = "View user profile", hint = "[U]ser", keys = ["u","U"] }
user-view-focus = { desc = "Open view mode", hint = "[V]iew", keys = ["v","V"] }
user-yank = { desc = "Yank the user URL", hint = "[Y]ank", keys = ["y","Y"] }
list-open-feed = { desc = "Open list", hint = "[O]pen", keys = ["o","O"] }
list-user-list = { desc = "List all users in a list", hint = "[U]sers", keys = ["u","U"] }
list-user-add = { desc = "Add user to list", hint = "[A]dd", keys = ["a","A"] }
list-user-delete = { desc = "Delete user from list", hint = "[D]elete", keys = ["d","D"] }
link-open = { desc = "Open URL", hint = "[O]pen", keys = ["o","O"] }
link-yank = { desc = "Yank the URL", hint = "[Y]ank", keys = ["y","Y"] }
tag-open-feed = { desc = "Open tag feed", hint = "[O]pen", keys = ["o","O"] }
tag-follow = { desc = "Toggle follow on tag", hint = "[F]ollow", hint-alt = "Un[F]ollow", keys = ["f","F"] }
compose-edit-cw = { desc = "Edit content warning text on new toot", hint = "[C]W text", keys = ["c","C"] }
compose-edit-text = { desc = "Edit the text on new toot", hint = "[E]dit text", keys = ["e","E"] }
compose-include-quote = { desc = "Include a quote when replying", hint = "[I]nclude quote", keys = ["i","I"] }
compose-media-focus = { desc = "Focus on adding media to toot", hint = "[M]edia", keys = ["m","M"] }
compose-post = { desc = "Post the new toot", hint = "[P]ost", keys = ["p","P"] }
compose-toggle-content-warning = { desc = "Toggle content warning on toot", hint = "[T]oggle CW", keys = ["t","T"] }
compose-visibility = { desc = "Edit the visibility on new toot", hint = "[V]isibility", keys = ["v","V"] }
compose-language = { desc = "Edit the language of a toot", hint = "[L]ang", keys = ["l","L"] }
compose-poll = { desc = "Switch to creating a poll", hint = "P[O]ll", keys = ["o","O"] }
media-delete = { desc = "Delete media file", hint = "[D]elete", keys = ["d","D"] }
media-edit-desc = { desc = "Edit the description on media file", hint = "[E]dit desc", keys = ["e","E"] }
media-add = { desc = "Add a new media file", hint = "[A]dd", keys = ["a","A"] }
vote-vote = { desc = "Vote on poll", hint = "[V]ote", keys = ["v","V"] }
vote-select = { desc = "Select item to vote on", hint = "[Enter] to select", special-keys = ["Enter"] }
poll-add = { desc = "Add a new poll option", hint = "[A]dd", keys = ["a","A"] }
poll-edit = { desc = "Edit a poll option", hint = "[E]dit", keys = ["e","E"] }
poll-delete = { desc = "Delete a poll option", hint = "[D]elete", keys = ["d","D"] }
poll-multi-toggle = { desc = "Toggle voting on multiple options", hint = "Toggle [M]ultiple", keys = ["m","M"] }
poll-expiration = { desc = "Change the expiration of poll", hint = "E[X]pires", keys = ["x","X"] }
preference-name = { desc = "Change display name", hint = "[N]ame", keys = ["n","N"] }
preference-visibility = { desc = "Change default visibility of toots", hint = "[V]isibility", keys = ["v","V"] }
preference-bio = { desc = "Change bio in profile", hint = "[B]io", keys = ["b","B"] }
preference-save = { desc = "Save your preferences", hint = "[S]ave", keys = ["s","S"] }
preference-fields = { desc = "Edit profile fields", hint = "[F]ields", keys = ["f","F"] }
preference-fields-add = { desc = "Add new field", hint = "[A]dd", keys = ["a","A"] }
preference-fields-edit = { desc = "Edit current field", hint = "[E]dit", keys = ["e","E"] }
preference-fields-delete = { desc = "Delete current field", hint = "[D]elete", keys = ["d","D"] }
editor-exit = { desc = "Exit the editor", hint = "[Esc] when done", special-keys = ["Esc"] }
